#!/bin/sh
# alias debug_break='while { printf "[debug] ";read line; }; do eval "$line"; done; }'
export USPLASH_SOCK=/run/usplash

[ -z $UGEAR ] && export UGEAR=/lib/u

isfnc(){ type $1 2>&1 | grep -iq function; }
isapp(){ [ -x "$(which $1 >/dev/null 2>&1)" ]; }

run_rc(){
  local lib=$1 && shift 2>/dev/null &&
  [ -f "/etc/rc.d/$lib" ] &&
  . "/etc/rc.d/$lib" "$@"; }

run_target(){
  local lib=$1 && shift 2>/dev/null &&
  if [ -f "/etc/target.d/$lib" ]
  then
    if [ $$ -ne 1 ]; then usplash -q"ugear run_target $@"; fi
    . "/etc/target.d/$lib" "$@";
  fi; }

run_hook(){
  type "$1" 2>&1 | grep -iq 'function' &&
  local hook="$1" && shift 2>/dev/null &&
  { $hook "$@"; return $?; } || return 0; }

blk_uuid      (){ blkid $1 | sed '/ UUID/!d;s/.* UUID=.//;s/".*//;s/-//g'; }
blk_byuuid    (){ blkid | awk -vs="$1" '{gsub(/UUID=/,"");gsub(/[-":]/,"")}(s==$2){print $1}'; }

getchar       (){ eval $1="'$(dd bs=1 count=1 2>/dev/null)'"; }
__getchar     (){ dd bs=1 count=1 2>/dev/null; }

respawn(){
  local t=$(date +%s) r=0
  while "$@"
  do if [ $t -eq $(date +%s) ]
  then r=$(( $r + 1 ))
    if [ $r -gt 4 ]
    then reset; clear
      # FIXME usplash fini
      echo "[$1] error: respawning too fast"
      echo "[$1] dropping to /bin/bash"
      exec /bin/bash -l
      echo "[bash] failed, trying /bin/sh"
      exec /bin/sh -l
      echo "[sh] failed, rebooting..."
      reboot -f
    fi
  else r=0; fi; t=$(date +%s); done; }

ugear(){ "$@"; }

for lib in $(find $UGEAR -type f ! -name gear | grep -v awk)
do . $lib 2>/dev/null
done
