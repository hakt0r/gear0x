#!/bin/sh

hotplug(){
  mkdir -p /run/hotplug/
  # fire hotplug event for devices that are already present
  local c= d=
  for c in net block; do for d in $(ls /sys/class/$c)
    do { EARLY=early ACTION=add SUBSYSTEM=$c DEVICE=$d INTERFACE=$d hotplug_event $c; } &
  done; done
  echo /bin/hotplug_event >/proc/sys/kernel/hotplug;
  # load drivers for devices that are already present
  awk '
  function addev(a){ if(!uniq[a]){ dev[++dc] = a; uniq[a] = 1 }}
  function madev(m,o,i){
    for(i=1;i<dc;i++){
      if(0 < match(dev[i],m)){
        system("modprobe " o " &")
        dev[i] = "void"
        break }}}
  BEGIN{
  SYS = "cat /sys/bus/*/devices/*/modalias"
  while( 0 < (SYS|getline) ){
    if(!index($0," ")){
         if(0<match($0,/pci:/)){ o = o "\\(" substr($0,1,22) "\\)\\|" }
    else if(0<match($0,/usb:/)){ o = o "\\(" substr($0,1,14) "\\)\\|" }
    else { o = o "\\(" $0              "\\)\\|" }
    addev($0) }
  } close(SYS)
  GREP = sprintf("grep -i \"%s\" /lib/modules/$(uname -r)/modules.alias",substr(o,1,length(o)-2))
  while((GREP|getline)>0){
    gsub(/\*/,".*",$2)
    madev($2,$3)
  } close(GREP) }'; }

hotplug_event(){ exec >>/run/hotplug/$SUBSYSTEM.log 2>&1
  echo "($SUBSYSTEM:$ACTION):$UNAME :: @$NAME@$DEVICE@$INTERFACE@$(basename $DEVNAME 2>/dev/null)@$(basename $DEVPATH 2>/dev/null)@"
  [ -z "$SUBSYSTEM" -o -z "$ACTION" ]      && return 1
  local hook= dir=/etc/on/$SUBSYSTEM/$ACTION RUNDIR=/run/$SUBSYSTEM/$DEVICE
  local UNAME=$(echo "@$NAME@$DEVICE@$INTERFACE@$(basename $DEVNAME 2>/dev/null)@$(basename $DEVPATH 2>/dev/null)@"|sed 's/^@\+//;s/@.*//')
  run_hook _${SUBSYSTEM}_${ACTION}_pre     || return 0
  for hook in $(ls $dir/* 2>/dev/null)
  do . $hook || return 0; done
  run_hook _${SUBSYSTEM}_${ACTION}_default || return 0
  run_hook _${SUBSYSTEM}_${ACTION}_post    || return 0; }

_block_add_pre(){
  [ -f /run/installing ] && return 1
  [ -z "$DEVICE" ] && return 1
  export TARGET=$RUNDIR/mount
  mkdir -p $TARGET && mount /dev/$DEVICE $TARGET >/dev/null 2>&1; }

_block_add_default(){
  umount -f $TARGET >/dev/null 2>&1; return 1; }

_block_change_pre(){
  export DEVICE=$(basename $DEVNAME 2>/dev/null);
  [ -z "$DEVICE" ] && return 1
  _block_add_pre; }

_block_change_default()  { _block_add_default; }
