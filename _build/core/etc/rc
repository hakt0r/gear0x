#!/bin/sh

gear0xSPLASH(){                                                  usplash -l"$(echo\
 "%c                              ████████████████                              "'
'"%c                       ███████                ███████                       "'
'"%c                   ████                              ████                   "'
'"%c                ███        ▄██▄  ▄██▄  ▄██▄  ▄██▄        ███                "'
'"%c             ██████        █     █     █  █  █ ▄▀        ██████             "'
'"%c           █████████       █ ▀█  █▀▀   █ ▀█  █▀▄        █████████           "'
'"%c         █████████████     ▀██▀  ▀▄▄▄  █  █  █  █     ▓████████████         "'
'"%c        ███████████████                              ███████████████        "'
'"%c      ██████████████████▓                          ▓██████████████████      "'
'"%c     █████████████████████                        █████████████████████     "'
'"%c    ████████████████████████                    ████████████████████████    "'
'"%c   ███████████████████████████                ███████████████████████████   "'
'"%c   ██████████████████████████   ░▒▓██████▓▒░   ██████████████████████████   "'
'"%c  █████████████████████████   ████████████████   █████████████████████████  "'
'"%c  ████████████████████████  ████████████████████  ████████████████████████  "'
'"%c ████████████████████████  ██████████████████████  ████████████████████████ "'
'"%c ███████████████████████  ████████████████████████  ███████████████████████ "'
'"%c ███████████████████████  ████████████████████████  ███████████████████████ "'
'"%c █                        ████████████████████████                        █ "'
'"%c █                         ██████████████████████                         █ "'
'"%c  █                         ████████████████████                         █  "'
'"%c  █                          ██████████████████                          █  "'
'"%c   █                          ████████████████                          █   "'
'"%c   █                              ▓▓████▓▓                              █   "'
'"%c    █                      ████▓▒          ▒▓█████                     █    "'
'"%c     █                    █████████████████████████                   █     "'
'"%c      ██                ▓███████████████████████████▓               ██      "'
'"%c        █              ███████████████████████████████             █        "'
'"%c         ██          ▓█████████████████████████████████▓         ██         "'
'"%c           ██       █████████████████████████████████████      ██           "'
'"%c             ███  ▓███████████████████████████████████████▓ ███             "'
'"%c                ████████████████████████████████████████████                "'
'"%c                   ██████████████████████████████████████                   "'
'"%c                       ██████████████████████████████                       "'
'"%c                              ████████████████                              " | tac)"; };

gear0xINIT(){ local B=/bin/busybox; exec 2>&1
  export LC_ALL=C LANG=C LC_CTYPE=UTF-8
  export TERM=linux PATH=/usr/bin:/sbin:/bin HOME=/root LD_LIBRARY_PATH=/lib TMP=/run TMPDIR=/run
  $B touch /test 2>/dev/null && $B rm /test || $B mount -o remount,rw /  # remount root if necessary
  $B --install -s /bin
  # init overlay
  . /lib/u/overlay; overlay_init
  # exec /bin/taskd daemon /etc/rc.d
  export USPLASH_TTY=$($B tty) USPLASH_SOCK=/run/usplash
  local header="$(printf "\e[1;44;33m gear$(cat /etc/version)/$(cat /etc/release) [ram]")"
  local footer="$(printf "\e[1;44;34m gear$(cat /etc/version) a minimal hackable OS")"
  . /lib/u/overlay; ubasemounts
  exec usplash -m \
    -e 'INIT_MODULE=gear0xSTART . /etc/rc'\
    -H "$header" -F "$footer"; }

_status_(){ usplash -i aaaa_boot -t "$@" -a: & usplash -l "$@" & }

gear0xSTART(){ gear0xSPLASH
  { _status_ "init: env"
  set_hostname
  sysctl -w kernel.printk="3 4 1 3"
  ln    -sf /proc/mounts /etc/mtab
  stty  -F $USPLASH_TTY speed 115200
  # i hate /tmp but it's still hardcoded in some debian packages
  ln -sf $1/run $1/tmp; } >/dev/null 2>&1

  { _status_ "init: early kmods"; modprobe -ab \
    virtio_gpu virtio_input \
    ext4 usb_storage squashfs overlay xts aes ctr cbc sha256 \
    dm_crypt crc32 ccm lib80211_crypt_tkip lib80211_crypt_ccmp lib80211_crypt_wep \
    usbhid evdev xhci_hcd sdhci sdhci_acpi hid_multitouch i2c_hid \
    mmc_block fat vfat isofs md_mod thermal sd_mod sg efivars
   } >/dev/null 2>&1 &

  { _status_ "init: menu"
  # ( while sleep 1; do usplash -w zzz_clock -t "$(printf "\e[43;30m %s \e[0m" "$(date)")"; done; ) & # magic clock
  usplash -i aboot         -t " $yel booting $clr [ enter: rescue console ] "  -a "INIT_MODULE=gear0xUSPLASH_TO_RESCUE . /etc/rc"
  usplash -i aboot:bash    -t " $grn bash    $clr [ plain ] "                  -a "openvt -sc 2 /bin/bash"
  usplash -i aboot:tmux    -t " $grn bash    $clr [ tmux ] "                   -a "openvt -sc 2 /bin/tmux"
  usplash -i acrypto       -t " $grn crypto  $clr [ boot ] "                   -a "openvt -sc 3 /bin/cryptomount"
  usplash -i ainstall      -t " $grn install $clr [ debootstrap ] "            -a "openvt -sc 3 /bin/install-gear"
  usplash -i zreboot       -t " $red reboot  $clr "                            -a "reboot -f"
  usplash -i zreboot:halt  -t " $red halt    $clr "                            -a "halt -f"; } &
  gear0xHOTPLUG; }

gear0xHOTPLUG(){
  _status_ "init: start $yel hotplug $clr";
  hotplug
  overlay_mount && { _status_ "init: start $yel overlay $clr"; return 0; }
  echo /bin/hotplug_event >/proc/sys/kernel/hotplug; hotplug &
  gear0xREADY; }

gear0xREADY(){
  _status_ "init: start $yel dropbear $clr"; gear0xSSH
  _status_ "init: start $yel rc.d $clr"
  for lib in $(ls /etc/rc.d|sort) # run rc-scripts
  do
    usplash -l "start $yel rc.d/$lib $clr"
    run_rc $lib
  done

  wait
  usplash -d aaaa_boot
  usplash -d aboot:tmux
  usplash -i aboot -t " $grn bash    $clr [ tmux ] "                   -a "openvt -sc 2 /bin/tmux"
  usplash -l "gear$(cat /etc/version)/$(cat /etc/release) $grn ready $clr"; }

gear0xRESCUE(){
  export OS_MODE=rescue
  reset; clear;
  setsid cttyhack sh -l
  echo s > /proc/sysrq-trigger
  echo u > /proc/sysrq-trigger
  echo b > /proc/sysrq-trigger; }

gear0xUSPLASH_TO_RESCUE(){
  usplash -q"
    INIT_MODULE=gear0xRESCUE . /etc/rc
  " || setsid cttyhack sh -l; }

gear0xSSH(){ { local p=/run/net/dropbear
  usplash -i ssh -t " starting ssh debug console " -a 'killall -9 dropbearkey dropbear'
  local pw=$(head -c 16 /dev/urandom|busybox od -x|awk '{print $2$3$4$5$6;}' | head -n1)
  echo root:$pw | chpasswd
  usplash -i ssh:info -t " login: root/$pw" -a 'echo change root pw'
  mkdir -p $p
  local key=$(
    dropbearkey -t ecdsa -s 521 -f $p/ecdsa_key 2>&1 |
    awk '/ingerprint/{gsub(/:/,"");print $3}')
  /bin/dropbear -a -r $p/ecdsa_key \
    -E -P $p/pid \
    >$p/log 2>&1
  usplash -i ssh -t " ssh: $key " -a ''; } & }

# colors
local clr=$(printf '\x1b[0m')
local red=$(printf '\x1b[1;41;30m')
local grn=$(printf '\x1b[1;42;30m')
local yel=$(printf '\x1b[1;43;30m')

. /lib/u/gear

[ -n "$INIT_MODULE" ] && { $INIT_MODULE >/dev/null 2>&1 & } || gear0xINIT
